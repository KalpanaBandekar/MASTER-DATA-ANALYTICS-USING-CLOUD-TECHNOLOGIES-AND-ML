CREATE OR REPLACE DATABASE AWSDATABASE;

USE AWSDATABASE;


CREATE OR REPLACE TABLE AWS_RETAIL_TRANSACTION_RAW LIKE AZUREDATABASE.PUBLIC.TRANSACTION_RAW;

create or replace file format AWS_RETAIL_TXNS_CSV LIKE AZUREDATABASE.PUBLIC.RETAIL_TRNXS_CSV;

CREATE OR REPLACE STORAGE INTEGRATION KB_RETAIL_TXNS_STAGE
TYPE = external_stage
STORAGE_PROVIDER = s3
STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::283422571181:role/kb_retail_access_role'
ENABLED = true
STORAGE_ALLOWED_LOCATIONS = ('s3://retail-develop/');

DESC integration KB_RETAIL_TXNS_STAGE;


CREATE OR REPLACE STAGE RETAIL_TXNS_STAGE
URL ='s3://retail-develop'
file_format = AWS_RETAIL_TXNS_CSV
storage_integration = KB_RETAIL_TXNS_STAGE;

LIST @RETAIL_TXNS_STAGE;

SHOW STAGES;

---CREATE SNOWPIPE THAT RECOGNISES CSV THAT ARE INGESTED FROM EXTERNAL STAGE AND COPIES THE DATA INTO EXISTING TABLE

--The AUTO_INGEST=true parameter specifies to read 
--- event notifications sent from an S3 bucket to an SQS queue when new data is ready to load.

CREATE OR REPLACE PIPE RETAIL_SNOWPIPE_TRANSACTION  AUTO_INGEST = TRUE AS
COPY INTO AWSDATABASE.PUBLIC.AWS_RETAIL_TRANSACTION_RAW --COPY INTO TABLE NAME @STAGING NAME FOLLOWED BY BUCKET FOLDER NAME----
FROM '@RETAIL_TXNS_STAGE/retail-develop/' 
FILE_FORMAT =  AWS_RETAIL_TXNS_CSV;

SHOW PIPES;

SELECT COUNT(*) FROM AWSDATABASE.PUBLIC.AWS_RETAIL_TRANSACTION_RAW;

----------------------------------------------------------PIPEREFRESH-----------------------------------------------------------------

ALTER PIPE  RETAIL_SNOWPIPE_TRANSACTION refresh;


SELECT * FROM AWSDATABASE.PUBLIC.AWS_RETAIL_TRANSACTION_RAW;

 